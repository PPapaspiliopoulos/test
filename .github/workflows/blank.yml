name: build

on: [push]

jobs:
  check-identity:
    runs-on: ubuntu-latest
    outputs:
      authorized_user: ${{ steps.check-authorized-user.outputs.authorized_user}}
    steps:
      - name: Check identity
        id: check-authorized-user
        shell: bash
        run: |
          authorized_user='True'
          echo "authorized_user=$authorized_user" >> "$GITHUB_OUTPUT"
 
  authorize-internal:
    needs: [check-identity]
    runs-on: ubuntu-latest
    if: (needs.check-identity.result == 'success') && 
        (!needs.check-identity.outputs.null_value) && 
        (needs.check-identity.outputs.authorized_user == 'True')
    outputs:
      internal_run: ${{ steps.authorize-internal.outputs.internal_run }}
    steps:
      - name: Authorize internal
        id: authorize-internal
        run: |
          internal_run='True'
          echo "internal_run=$internal_run" >> "$GITHUB_OUTPUT"
          echo "authorized"
  
  authorize-external:
    needs: [check-identity]
    runs-on: ubuntu-latest
    if: (needs.check-identity.result == 'success') && 
        (!needs.check-identity.outputs.null_value) && 
        (needs.check-identity.outputs.authorized_user == 'False')
    outputs:
      check_value: ${{ steps.check.outputs.check_value }}
    environment: correct_env
    steps:
      - name: check
        id: check
        run: |
          check_value='False'
          if [ ${{ vars.CHECK == 'True' }} ]; then
            check_value='True'
          fi
          echo "check_value=$check_value" >> "$GITHUB_OUTPUT"

  authorize:
    needs: [authorize-external, authorize-internal]
    runs-on: ubuntu-latest
    if: |
      always() &&
      !failure() && !cancelled() &&
      (needs.authorize-internal.result == 'success' || needs.authorize-external.result == 'success') &&
      (needs.authorize-internal.result != needs.authorize-external.result) &&
      (needs.authorize-external.outputs.check_value == 'True' || needs.authorize-internal.outputs.internal_run == 'True')
    steps:
      - name: Check identity
        run: echo "correct environment passed"
  
  build-yml-check:
    runs-on: ubuntu-latest
    steps:
      - name: test
        run: echo "run"

  build_matrix:
    needs: [build-yml-check, authorize]
    runs-on: ubuntu-latest
    steps:
      - name: test
        run: echo "run"
